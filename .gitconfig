# -*- conf -*-

[alias]
	up = !"b=${1:-origin}; git fetch ${b%%/*}; git checkout $b"
	pr1 = !"bash -c 'git checkout -b $1 && git push' pr1"
	pr = !"bash -c 'git checkout -b ${1:?no branch name} origin${2:+/}$2~0' pr"
	# TODO: use --is-ancestor for git >=1.8 or so
	rm-pr = !"bash -c 'b=${1:-origin}; git symbolic-ref HEAD >/dev/null && git fetch ${b%%/*} && if [ \"$(git merge-base HEAD $b)\" = \"$(git rev-parse HEAD)\" ]; then git checkout $b && git branch -d @{-1}; else echo Not merged into $b. >&2; false; fi' rm-pr"
	remerge = !"git reset $(git commit-tree HEAD: $(git rev-parse HEAD^^@ | sed -e s/$(git merge-base HEAD^ HEAD^2)/HEAD^2/ -e s/^/-p\\ /) </dev/null); git commit --amend -c HEAD@{1}^"
	fetch-pr = !sh -c 'git fetch central +pull-requests/$1/${2:-merge}:remotes/central/pr/$1' fetch-pr
	checkout-pr = !sh -c 'git fetch central pull-requests/$1/${2:-merge} && git checkout FETCH_HEAD' checkout-pr
	tgz = "!sh -c 'git archive --prefix=${1##*/}/ -o $1.tgz ${2:-HEAD}' tgz"
	subgrep = !"bash -c 'git --no-pager grep \"$@\"; a=(\"$@\"); git submodule foreach --recursive \"$(declare -p a); \"'\\''git --no-pager grep \"${a[@]}\" || :'\\' subgrep"
[url "git@xcp-stash:"]
	insteadOf = xcp-stash:
[url "git@xcp-gitlab:"]
	insteadOf = xcp-gitlab:
[url "git@gitlab:"]
	insteadOf = gitlab:
[url "git@gitlab.com:"]
	insteadOf = gitlab.com:
[url "git@github.com:"]
	insteadOf = github.com:
[push]
	default = current
[diff]
	renames = true
[diff "c++draft"]
	xfuncname = "\\\\rSec[0-9]+(\\[.*\\])\\{"
[merge]
	conflictstyle = diff3
[merge "ours"]
	driver = true %O %A %B
	name = Ignore other
[rebase]
	autosquash = true
[core]
	pager = less -+FX
[pager]
	subgrep = true
[column]
	ui = auto dense
[color]
	ui = true
[interactive]
	singlekey = true
[advice]
	pushNonFFCurrent = false
	pushNonFFMatching = false
	statusHints = false
	resolveConflict = false
	detachedHead = false
